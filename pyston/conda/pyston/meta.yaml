{% set build_num = 5 %}
{% set llvm_version = "10.0.1" %}
{% set pyston_version = "2.3.1" %}
{% set python_version = "3.8.12" %}
{% set pyston_version2 = ".".join(pyston_version.split(".")[:2]) %}
{% set python_version2 = ".".join(python_version.split(".")[:2]) %}
{% set unopt_build = environ.get('PYSTON_UNOPT_BUILD', '0') | int %}

package:
  name: pyston{{ pyston_version2 }}-split
  version: {{ pyston_version }}
  skip: True  # [not linux]

source:
  path: ../../../

outputs:
  - name: pyston{{ pyston_version2 }}
    script: build_base.sh

    build:
      number: {{ build_num }}
      string: {{ build_num }}_unopt_{{ pyston_version2.replace('.', '') }}_pyston # [unopt]
      string: {{ build_num }}_{{ pyston_version2.replace('.', '') }}_pyston # [not unopt]

      # don't compile python code for now
      skip_compile_pyc:
        "*.py"

      script_env:
        - PYSTON_VERSION2={{ pyston_version2 }}
        - PYTHON_VERSION2={{ python_version2 }}
        - PYSTON_UNOPT_BUILD={{ unopt_build }}

      always_include_files:
        # this directory is already created by our build requirement on 'python' so will not get bundled automatically
        # but we want the pyston package to create it too so force package our README.txt.
        - lib/python{{ python_version2 }}/site-packages/README.txt

      detect_binary_files_with_prefix: true


    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ cdt('xorg-x11-proto-devel') }}  # [linux]
        - {{ cdt('libx11-devel') }}  # [linux]
        - python
        - make
        - cmake
        - virtualenv
        - pkg-config
        - clang={{ llvm_version }}
        - llvmdev={{ llvm_version }}
        - llvm-tools={{ llvm_version }}
        - compiler-rt={{ llvm_version }}
        - libtool
        - sqlite
        - luajit
        - bolt==2021.11.13 *_pyston
        - zlib

        # nitrous needs 'nm'
        - binutils

      host:
        - bzip2
        - sqlite
        - xz
        - zlib
        - openssl
        - readline  # [not win]
        - tk
        - ncurses  # [unix]
        - libffi
          # The conda-forge recipe has this dependency but it seems to not exist on conda-forge:
        # - libuuid  # [linux]
          # The conda-forge recipe has these dependencies but I think they only exist on conda-forge:
        # - ld_impl_{{ target_platform }} >=2.36.1  # [linux]
        # - libnsl  # [linux]

        # pillow dependencies
        - freetype
        - jpeg
        - libtiff
        - libwebp

      run:
        - tzdata

      run_constrained:
        - python {{ python_version }} *_{{ pyston_version2.replace('.', '') }}_pyston

  - name: libpython-static
    script: build_static.sh
    version: {{ python_version }}

    build:
      string: h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_pyston
      script_env:
        - PYSTON_VERSION2={{ pyston_version2 }}
        - PYTHON_VERSION2={{ python_version2 }}
        - PYSTON_UNOPT_BUILD={{ unopt_build }}

    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
      host:
        - {{ pin_subpackage('pyston' + pyston_version2, exact=True) }}
      run:
        - {{ pin_subpackage('pyston' + pyston_version2, exact=True) }}

test:
  commands:
    - pyston -c "print('works')"

about:
  home: https://github.com/pyston/pyston
  license: PSF
  license_file: ../../../LICENSE
  summary: Pyston Python implementation
