#ifndef Py_INTERNAL_AOT_CEVAL_JIT_HELPER_H
#define Py_INTERNAL_AOT_CEVAL_JIT_HELPER_H
#ifdef __cplusplus
extern "C" {
#endif

#include "Python.h"

#if PYSTON_SPEEDUPS

#define JIT_HELPER(name) PyObject* JIT_HELPER_##name(int _not_set)
#define JIT_HELPER1(name, py1) PyObject* JIT_HELPER_##name(int _not_set, PyObject* py1)
#define JIT_HELPER2(name, py1, py2) PyObject* JIT_HELPER_##name(int _not_set, PyObject* py1, PyObject* py2)
#define JIT_HELPER_WITH_OPARG(name) PyObject* JIT_HELPER_##name(int oparg)
#define JIT_HELPER_WITH_OPARG1(name, py1) PyObject* JIT_HELPER_##name(int oparg, PyObject* py1)
#define JIT_HELPER_WITH_OPARG2(name, py1, py2) PyObject* JIT_HELPER_##name(int oparg, PyObject* py1, PyObject* py2)
#define JIT_HELPER_WITH_OPARG3(name, py1, py2, py3) PyObject* JIT_HELPER_##name(int oparg, PyObject* py1, PyObject* py2, PyObject* py3)
#define JIT_HELPER_WITH_NAME(name_) PyObject* JIT_HELPER_##name_(PyObject* name)
#define JIT_HELPER_WITH_NAME1(name_, py1) PyObject* JIT_HELPER_##name_(PyObject* name, PyObject* py1)
#define JIT_HELPER_WITH_NAME_OPCACHE_AOT(name_) PyObject* JIT_HELPER_##name_(PyObject* name, _PyOpcache *co_opcache)
#define JIT_HELPER_WITH_NAME_OPCACHE_AOT1(name_, py1) PyObject* JIT_HELPER_##name_(PyObject* name, PyObject* py1, _PyOpcache *co_opcache)
#define JIT_HELPER_WITH_NAME_OPCACHE_AOT2(name_, py1, py2) PyObject* JIT_HELPER_##name_(PyObject* name, PyObject* py1, PyObject* py2, _PyOpcache *co_opcache)

long JIT_HELPER_EXCEPTION_UNWIND();
PyObject* JIT_HELPER_DEOPT(int jit_first_trace_for_line);
void JIT_HELPER_TRACEFUNC();
PyObject* JIT_HELPER_USE_TRACING(PyObject* retval);

JIT_HELPER1(UNARY_NOT, value);
JIT_HELPER1(PRINT_EXPR, value);
JIT_HELPER_WITH_OPARG(RAISE_VARARGS);
JIT_HELPER1(GET_AITER, obj);
JIT_HELPER(GET_ANEXT);
JIT_HELPER1(GET_AWAITABLE, iterable);
JIT_HELPER1(YIELD_FROM, v);
JIT_HELPER1(YIELD_VALUE, retval);
JIT_HELPER(POP_EXCEPT);
JIT_HELPER_WITH_OPARG(POP_FINALLY);
JIT_HELPER1(END_ASYNC_FOR, exc);
JIT_HELPER(LOAD_BUILD_CLASS);
JIT_HELPER_WITH_NAME1(STORE_NAME, v);
JIT_HELPER_WITH_NAME(DELETE_NAME);
JIT_HELPER_WITH_OPARG1(UNPACK_SEQUENCE, seq);
__attribute__((flatten)) JIT_HELPER1(UNPACK_SEQUENCE2, seq);
__attribute__((flatten)) JIT_HELPER1(UNPACK_SEQUENCE3, seq);
JIT_HELPER_WITH_OPARG1(UNPACK_EX, seq);
JIT_HELPER_WITH_NAME_OPCACHE_AOT2(STORE_ATTR, owner, v);
JIT_HELPER_WITH_NAME_OPCACHE_AOT2(STORE_ATTR_CACHED, owner, v);
JIT_HELPER_WITH_NAME(DELETE_GLOBAL);
JIT_HELPER_WITH_NAME(LOAD_NAME);
JIT_HELPER_WITH_NAME_OPCACHE_AOT(LOAD_GLOBAL);
JIT_HELPER_WITH_OPARG(UNBOUNDLOCAL_ERROR);
JIT_HELPER_WITH_OPARG(LOAD_CLASSDEREF);
JIT_HELPER_WITH_OPARG(BUILD_STRING);
JIT_HELPER_WITH_OPARG(BUILD_TUPLE_UNPACK_WITH_CALL);
JIT_HELPER_WITH_OPARG(BUILD_TUPLE_UNPACK);
JIT_HELPER_WITH_OPARG(BUILD_LIST_UNPACK);
JIT_HELPER_WITH_OPARG(BUILD_SET);
JIT_HELPER_WITH_OPARG(BUILD_SET_UNPACK);
JIT_HELPER_WITH_OPARG(BUILD_MAP);
JIT_HELPER(SETUP_ANNOTATIONS);
JIT_HELPER_WITH_OPARG(BUILD_CONST_KEY_MAP);
JIT_HELPER_WITH_OPARG(BUILD_MAP_UNPACK);
JIT_HELPER_WITH_OPARG(BUILD_MAP_UNPACK_WITH_CALL);
JIT_HELPER_WITH_NAME_OPCACHE_AOT1(LOAD_ATTR, owner);
JIT_HELPER_WITH_NAME_OPCACHE_AOT1(LOAD_ATTR_CACHED, owner);
JIT_HELPER1(IMPORT_STAR, from);
JIT_HELPER1(GET_YIELD_FROM_ITER, iterable);
JIT_HELPER(FOR_ITER_SECOND_PART);
JIT_HELPER(BEFORE_ASYNC_WITH);
JIT_HELPER_WITH_OPARG(SETUP_WITH);
JIT_HELPER(WITH_CLEANUP_START);
JIT_HELPER2(WITH_CLEANUP_FINISH, res, exc);
JIT_HELPER_WITH_NAME_OPCACHE_AOT(LOAD_METHOD);
JIT_HELPER_WITH_NAME_OPCACHE_AOT(LOAD_METHOD_CACHED);
JIT_HELPER_WITH_OPARG1(CALL_FUNCTION_KW, names_);
JIT_HELPER_WITH_OPARG3(CALL_FUNCTION_EX_internal, kwargs, callargs, func);
__attribute__((flatten)) JIT_HELPER_WITH_OPARG2(CALL_FUNCTION_EX_NOKWARGS, callargs, func);
__attribute__((flatten)) JIT_HELPER_WITH_OPARG3(CALL_FUNCTION_EX_KWARGS, kwargs, callargs, func);
JIT_HELPER_WITH_OPARG2(MAKE_FUNCTION, qualname, codeobj);
JIT_HELPER_WITH_OPARG(FORMAT_VALUE);

#endif

#ifdef __cplusplus
}
#endif
#endif
